package com.example.healthmanagementorganization.Model;

import android.util.Log;

import java.util.Calendar;

public class Appointment {
    private String appointmentID;
    private String patientID;
    private String doctorID;
    private Calendar startTime;
    private Calendar endTime;

    /**
     * constructor
     *
     * @param patientID the patient's ID
     * @param doctorID  the doctor's ID
     * @param startTime the start time of the appointment
     * @param endTime   the end time of the appointment
     */
    public Appointment(String patientID, String doctorID, Calendar startTime, Calendar endTime) {
        // check if the patientID is valid
        if (!setPatientID(patientID)) {
            Log.d("Appointment", "Appointment: patientID is null");
            return;
        }
        // check if the doctorID is valid
        if (!setDoctorID(doctorID)) {
            Log.d("Appointment", "Appointment: doctorID is null");
            return;
        }
        // check if the start time is valid
        if (!setStartTime(startTime)) {
            Log.d("Appointment", "Appointment: startTime is null");
            return;
        }
        // check if the end time is valid
        if (!setEndTime(endTime)) {
            Log.d("Appointment", "Appointment: endTime is null");
            return;
        }
        // check if the start time is before the end time
        if (startTime.compareTo(endTime) >= 0) {
            Log.d("Appointment", "Appointment: startTime is after endTime");
            return;
        }

        // set the appointmentID
        setAppointmentID();

    }


    /**
     * set the appointmentID
     * the appointmentID is the combination of the patientID and the doctorID
     * the appointmentID is unique
     * the appointmentID is generated by the system
     */
    public void setAppointmentID() {
        String id = "";
        id += patientID;
        id += doctorID;
        id += startTime.get(Calendar.YEAR);
        id += startTime.get(Calendar.MONTH);
        id += startTime.get(Calendar.DAY_OF_MONTH);
        id += startTime.get(Calendar.HOUR_OF_DAY);
        id += startTime.get(Calendar.MINUTE);
        id += startTime.get(Calendar.SECOND);
        id += endTime.get(Calendar.HOUR_OF_DAY);
        id += endTime.get(Calendar.MINUTE);
        id += endTime.get(Calendar.SECOND);
        this.appointmentID = id;
    }


    /**
     * set the patientID
     *
     * @param patientID the patientID
     * @return true if the patientID is valid
     */
    public boolean setPatientID(String patientID) {
        // check if the patientID is valid
        if (patientID == null || patientID.isEmpty()) {
            return false;
        }

        this.patientID = patientID;
        return true;
    }

    /**
     * set the doctorID
     *
     * @param doctorID the doctorID
     * @return true if the doctorID is valid
     */
    public boolean setDoctorID(String doctorID) {
        // check if the doctorID is valid
        if (doctorID == null || doctorID.isEmpty()) {
            return false;
        }

        this.doctorID = doctorID;
        return true;
    }

    /**
     * set the start time
     *
     * @param startTime the start time
     * @return true if the start time is valid
     */
    public boolean setStartTime(Calendar startTime) {
        // check if the startTime is valid
        if (startTime == null) {
            return false;
        }
        // check if the startTime is after the current time
        if (startTime.before(Calendar.getInstance())) {
            return false;
        }
        this.startTime = startTime;
        return true;
    }

    /**
     * set the end time
     *
     * @param endTime the end time
     * @return true if the end time is valid
     */
    public boolean setEndTime(Calendar endTime) {
        // check if the endTime is valid
        if (endTime == null) {
            return false;
        }
        // check if the endTime is after the current time
        if (endTime.before(Calendar.getInstance())) {
            return false;
        }
        this.endTime = endTime;
        return true;
    }
}
